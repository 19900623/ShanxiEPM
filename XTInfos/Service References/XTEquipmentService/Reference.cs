//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace XTInfos.XTEquipmentService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EquipmentInfoBean", Namespace="http://webservice.hrm.weaver")]
    [System.SerializableAttribute()]
    public partial class EquipmentInfoBean : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ETypeidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string assetsCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string deptidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string equipmentCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string equipmentCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string equipmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string equipmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string equipmentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string equipmentUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string hoscodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string manufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string subidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string throwingDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ETypeid {
            get {
                return this.ETypeidField;
            }
            set {
                if ((object.ReferenceEquals(this.ETypeidField, value) != true)) {
                    this.ETypeidField = value;
                    this.RaisePropertyChanged("ETypeid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string assetsCode {
            get {
                return this.assetsCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.assetsCodeField, value) != true)) {
                    this.assetsCodeField = value;
                    this.RaisePropertyChanged("assetsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string deptid {
            get {
                return this.deptidField;
            }
            set {
                if ((object.ReferenceEquals(this.deptidField, value) != true)) {
                    this.deptidField = value;
                    this.RaisePropertyChanged("deptid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string equipmentCode {
            get {
                return this.equipmentCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.equipmentCodeField, value) != true)) {
                    this.equipmentCodeField = value;
                    this.RaisePropertyChanged("equipmentCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string equipmentCount {
            get {
                return this.equipmentCountField;
            }
            set {
                if ((object.ReferenceEquals(this.equipmentCountField, value) != true)) {
                    this.equipmentCountField = value;
                    this.RaisePropertyChanged("equipmentCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string equipmentID {
            get {
                return this.equipmentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.equipmentIDField, value) != true)) {
                    this.equipmentIDField = value;
                    this.RaisePropertyChanged("equipmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string equipmentName {
            get {
                return this.equipmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.equipmentNameField, value) != true)) {
                    this.equipmentNameField = value;
                    this.RaisePropertyChanged("equipmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string equipmentStatus {
            get {
                return this.equipmentStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.equipmentStatusField, value) != true)) {
                    this.equipmentStatusField = value;
                    this.RaisePropertyChanged("equipmentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string equipmentUnit {
            get {
                return this.equipmentUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.equipmentUnitField, value) != true)) {
                    this.equipmentUnitField = value;
                    this.RaisePropertyChanged("equipmentUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string hoscode {
            get {
                return this.hoscodeField;
            }
            set {
                if ((object.ReferenceEquals(this.hoscodeField, value) != true)) {
                    this.hoscodeField = value;
                    this.RaisePropertyChanged("hoscode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.manufacturerField, value) != true)) {
                    this.manufacturerField = value;
                    this.RaisePropertyChanged("manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string subid {
            get {
                return this.subidField;
            }
            set {
                if ((object.ReferenceEquals(this.subidField, value) != true)) {
                    this.subidField = value;
                    this.RaisePropertyChanged("subid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string throwingDate {
            get {
                return this.throwingDateField;
            }
            set {
                if ((object.ReferenceEquals(this.throwingDateField, value) != true)) {
                    this.throwingDateField = value;
                    this.RaisePropertyChanged("throwingDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EquipmentTypeBean", Namespace="http://webservice.hrm.weaver")]
    [System.SerializableAttribute()]
    public partial class EquipmentTypeBean : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EGradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ENameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ETypeidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string supEidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EGrade {
            get {
                return this.EGradeField;
            }
            set {
                if ((object.ReferenceEquals(this.EGradeField, value) != true)) {
                    this.EGradeField = value;
                    this.RaisePropertyChanged("EGrade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EName {
            get {
                return this.ENameField;
            }
            set {
                if ((object.ReferenceEquals(this.ENameField, value) != true)) {
                    this.ENameField = value;
                    this.RaisePropertyChanged("EName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EStatus {
            get {
                return this.EStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.EStatusField, value) != true)) {
                    this.EStatusField = value;
                    this.RaisePropertyChanged("EStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ETypeid {
            get {
                return this.ETypeidField;
            }
            set {
                if ((object.ReferenceEquals(this.ETypeidField, value) != true)) {
                    this.ETypeidField = value;
                    this.RaisePropertyChanged("ETypeid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string supEid {
            get {
                return this.supEidField;
            }
            set {
                if ((object.ReferenceEquals(this.supEidField, value) != true)) {
                    this.supEidField = value;
                    this.RaisePropertyChanged("supEid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://localhost/services/EquipmentService", ConfigurationName="XTEquipmentService.EquipmentServicePortType")]
    public interface EquipmentServicePortType {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:weaver.hrm.webservice.WarningService.getEquipmentInfo", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        XTInfos.XTEquipmentService.EquipmentInfoBean[] getEquipmentInfo(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:weaver.hrm.webservice.WarningService.getEquipmentInfo", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<XTInfos.XTEquipmentService.EquipmentInfoBean[]> getEquipmentInfoAsync(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:weaver.hrm.webservice.WarningService.getEquipmentType", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        XTInfos.XTEquipmentService.EquipmentTypeBean[] getEquipmentType(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:weaver.hrm.webservice.WarningService.getEquipmentType", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<XTInfos.XTEquipmentService.EquipmentTypeBean[]> getEquipmentTypeAsync(string in0);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface EquipmentServicePortTypeChannel : XTInfos.XTEquipmentService.EquipmentServicePortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EquipmentServicePortTypeClient : System.ServiceModel.ClientBase<XTInfos.XTEquipmentService.EquipmentServicePortType>, XTInfos.XTEquipmentService.EquipmentServicePortType {
        
        public EquipmentServicePortTypeClient() {
        }
        
        public EquipmentServicePortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EquipmentServicePortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EquipmentServicePortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EquipmentServicePortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public XTInfos.XTEquipmentService.EquipmentInfoBean[] getEquipmentInfo(string in0, string in1) {
            return base.Channel.getEquipmentInfo(in0, in1);
        }
        
        public System.Threading.Tasks.Task<XTInfos.XTEquipmentService.EquipmentInfoBean[]> getEquipmentInfoAsync(string in0, string in1) {
            return base.Channel.getEquipmentInfoAsync(in0, in1);
        }
        
        public XTInfos.XTEquipmentService.EquipmentTypeBean[] getEquipmentType(string in0) {
            return base.Channel.getEquipmentType(in0);
        }
        
        public System.Threading.Tasks.Task<XTInfos.XTEquipmentService.EquipmentTypeBean[]> getEquipmentTypeAsync(string in0) {
            return base.Channel.getEquipmentTypeAsync(in0);
        }
    }
}
